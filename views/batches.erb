<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="/css/states.css">
  <link rel="stylesheet" href="/css/customer_by_state.css">
  <link rel="icon" type="image/x-icon" href="/img/fav.png">
  <title>Onwords WorkSpace</title>
  <style>
    #statePieChart{max-width: 500px!important;max-height: 500px!important;}
    .chart-container {display: flex;justify-content: center;align-items: flex-start;}
    .chart-labels {margin-right: 20px;}
    .chart-labels p {margin: 0;padding: 5px;}
  </style>
</head>
<body>
<header class="header">
  <div class="header__container">
    <a href="#" class="header__logo">Onwords WorkSpace</a>

    <select id="incharge-dropdown" onchange="filterCustomersByIncharge()">
      <option value="">Select In-charge</option>
      <% if @staff_names && !@staff_names.empty? %>
        <% @staff_names.each do |name, uid| %>
          <option value="<%= name %>"><%= name %></option>
        <% end %>
      <% else %>
        <p>--None--</p>
      <% end %>
    </select>

    <div class="header__toggle">
      <i class='bx bx-menu' id="header-toggle"></i>
    </div>

  </div>
</header>

<div class="nav" id="navbar">
  <nav class="nav__container">
    <div>
      <img src="/img/onwords.svg" alt="Logo" class="nav__logo-name">
      <div class="nav__list">
        <div class="nav__items">

          <a href="/" class="nav__link">
            <i class='bx bx-home nav__icon'></i>
            <span class="nav__name">Home</span>
          </a>

          <div class="nav__dropdown">
            <i class='bx bx-user nav__icon'></i>
            <span class="nav__name">Clients</span>
            <i class='bx bx-chevron-down nav__icon nav__dropdown-icon'></i>
            <div class="nav__dropdown-collapse">
              <div class="nav__dropdown-content">
                <a href="/states" class="nav__dropdown-item">Status</a>
                <a href="/create_lead" class="nav__dropdown-item">Create Lead</a>
                <% allowed_departments = %w[ADMIN BRAVO] %>
                <% if allowed_departments.include?(@user_details['department']) %>
                  <a href="/bulk_assign" class="nav__dropdown-item">Bulk Assign</a>
                <% end %>
                <a href="/my_clients" class="nav__dropdown-item">My Clients</a>
              </div>
            </div>
          </div>

          <div class="nav__items">
            <div class="nav__dropdown">
              <i class='bx bx-compass nav__icon' ></i>
              <span class="nav__name">Files</span>
              <i class='bx bx-chevron-down nav__icon nav__dropdown-icon'></i>

              <div class="nav__dropdown-collapse">
                <div class="nav__dropdown-content">
                  <a href="/invoice" class="nav__dropdown-item">Invoice</a>
                  <a href="/proforma-invoice" class="nav__dropdown-item">Proforma</a>
                  <a href="/quotation" class="nav__dropdown-item">Quotation</a>
                </div>
              </div>
            </div>

            <% allowed_departments = %w[ADMIN BRAVO WEB] %>
            <% if allowed_departments.include?(@user_details['department']) %>
              <a href="/create_staff" class="nav__link">
                <i class='bx bx-plus nav__icon' ></i>
                <span class="nav__name">Create Staff</span>
              </a>
            <% end %>

            <div class="nav__dropdown">
              <i class='bx bx-smile nav__icon' ></i>
              <span class="nav__name">Attendance</span>
              <i class='bx bx-chevron-down nav__icon nav__dropdown-icon'></i>
              <div class="nav__dropdown-collapse">
                <div class="nav__dropdown-content">
                  <a href="/attendance" class="nav__dropdown-item">Daily</a>
                  <a href="/attendance/monthly_summary" class="nav__dropdown-item">Monthly</a>
                </div>
              </div>
            </div>

            <% allowed_departments = %w[ADMIN MANAGEMENT] %>
            <% if allowed_departments.include?(@user_details['department']) %>
              <a href="/notifications" class="nav__link">
                <i class='bx bx-bell nav__icon active' ></i>
                <span class="nav__name">Notification</span>
                <% if @unread_count && @unread_count > 0 %>
                  <span class="nav__notification"><%= @unread_count %></span>
                <% end %>
              </a>
            <% end %>

            <% allowed_departments = %w[ADMIN BRAVO WEB MANAGEMENT] %>
            <% if allowed_departments.include?(@user_details['department']) %>
              <a href="/inventory" class="nav__link">
                <i class='bx bx-bookmark nav__icon' ></i>
                <span class="nav__name">Inventory</span>
              </a>
            <% end %>


            <% allowed_departments = %w[ADMIN BRAVO WEB MANAGEMENT] %>
            <% if allowed_departments.include?(@user_details['department']) %>
              <a href="/view_completed_schedules" class="nav__link">
                <i class='bx bx-message-check nav__icon' ></i>
                <span class="nav__name">Completion History</span>
              </a>
            <% end %>

            <% allowed_departments = %w[ADMIN BRAVO WEB MANAGEMENT] %>
            <% if allowed_departments.include?(@user_details['department']) %>
              <a href="/view_buckets" class="nav__link">
                <i class='bx bx-bar-chart nav__icon' ></i>
                <span class="nav__name">Bucket Analytics</span>
              </a>
            <% end %>

            <a href="/schedules" class="nav__link">
              <i class='bx bx-phone nav__icon'></i>
              <span class="nav__name">Schedules</span>
              <% total_not_done = @not_done_calls %>
              <% if total_not_done > 0 %>
                <span class="nav__notification"><%= total_not_done %></span>
              <% end %>
            </a>

            <a href="/calendar" class="nav__link">
              <i class='bx bx-calendar nav__icon'></i>
              <span class="nav__name">Calendar</span>
              <% total_not_done = @not_done_visits + @not_done_installations + @not_done_services %>
              <% if total_not_done > 0 %>
                <span class="nav__notification"><%= total_not_done %></span>
              <% end %>
            </a>

          </div>
        </div>
      </div>
      <a href="/logout" class="nav__link nav__logout">
        <i class='bx bx-log-out nav__icon' ></i>
        <span class="nav__name">Log Out</span>
      </a>
    </div>
  </nav>
</div>

<main>

  <section>
    <ul>
      <% @months.each do |month| %>
        <li>
          <a href="/get_customers_by_batch?batch=<%= month %>">
            <%= month %> (<%= @month_counts[month] %> Leads)
          </a>
        </li>
      <% end %>
    </ul>
  </section>

  <div class="chart-container">
    <div class="chart-labels" id="chartLabels"></div>
    <div class="chart-pie">
      <canvas id="statePieChart" width="400" height="400"></canvas>
    </div>
  </div>

  <section>
    <h1>Customers in <%= params['batch'] %></h1>
    <table>
      <tr>
        <th>Name</th>
        <th>Phone</th>
        <th>Status</th>
        <th>Enquired For</th>
        <th>In-charge</th>
      </tr>
      <% @customers.each do |customer| %>
        <tr>
          <td><a href="/customer_profile?phone_number=<%= customer['phone_number'] %>"><%= customer['name'] %></a></td>
          <td><%= customer['phone_number'] %></td>
          <td><%= customer['customer_state'] %></td>
          <td><%= customer['inquired_for'] %></td>
          <td><%= customer['LeadIncharge'] %></td>
        </tr>
      <% end %>
    </table>
  </section>

</main>

<div class="loader"></div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</body>
<script>
    function filterCustomersByIncharge() {
        var inchargeUid = document.getElementById('incharge-dropdown').value;
        var batch = '<%= params['batch'] %>';

        fetch(`/filter_customers?batch=${batch}&incharge=${inchargeUid}`)
            .then(response => response.json())
            .then(customers => {
            })
            .catch(error => console.error('Error:', error));
    }
</script>
<script>
    function filterCustomersByIncharge() {
        var inchargeUid = document.getElementById('incharge-dropdown').value;
        var batch = '<%= params['batch'] %>';

        fetch(`/filter_customers?batch=${batch}&incharge=${inchargeUid}`)
            .then(response => response.json())
            .then(customers => {
                const stateCounts = {};
                customers.forEach(customer => {
                    const state = customer.customer_state;
                    if(stateCounts[state]) {
                        stateCounts[state] += 1;
                    } else {
                        stateCounts[state] = 1;
                    }
                });
                createPieChart(stateCounts);
            })
            .catch(error => console.error('Error:', error));
    }

    function createPieChart(stateCounts) {
        // Clear existing content and populate new labels
        const labelsContainer = document.getElementById('chartLabels');
        labelsContainer.innerHTML = '';
        Object.keys(stateCounts).forEach(state => {
            const count = stateCounts[state];
            const labelElement = document.createElement('p');
            labelElement.textContent = `${state}: ${count}`;
            labelsContainer.appendChild(labelElement);
        });

        const ctx = document.getElementById('statePieChart').getContext('2d');
        const data = {
            labels: Object.keys(stateCounts),
            datasets: [{
                label: 'Customer Count by State',
                data: Object.values(stateCounts),
                backgroundColor: [
                    'red', 'blue', 'green', 'yellow', 'purple', 'orange', 'cyan', 'magenta', 'black', 'olive'
                ],
            }]
        };

        new Chart(ctx, {
            type: 'pie',
            data: data,
            options: {
                responsive: true,
                maintainAspectRatio: false
            }
        });
    }

</script>
<script>
    function loadCustomersByBatch(batch) {
        fetch('/get_customers_by_batch?batch=' + batch)
            .then(response => response.json())
            .then(data => {
                displayCustomerData(data);
            })
            .catch(error => console.error('Error:', error));
    }

    function displayCustomerData(data) {
        var customerContainer = document.getElementById('customerData');
        customerContainer.innerHTML = '';
        data.forEach(customer => {
            var customerElement = document.createElement('div');
            customerElement.innerHTML = 'Customer Name: ' + customer.name + ' | Created Date: ' + customer.created_date;
            customerContainer.appendChild(customerElement);
        });
    }
</script>
<script>
    document.addEventListener("DOMContentLoaded", function() {
        var loader = document.querySelector('.loader');

        document.querySelectorAll('a').forEach(function(link) {
            link.addEventListener('click', function() {
                loader.style.display = 'grid';
            });
        });
    });

    window.onload = function() {
        var loader = document.querySelector('.loader');
        if (loader) {
            loader.style.display = 'none';
        }
    };
</script>
<script>
    const showMenu = (headerToggle, navbarId) =>{
        const toggleBtn = document.getElementById(headerToggle),
            nav = document.getElementById(navbarId)

        if(headerToggle && navbarId){
            toggleBtn.addEventListener('click', ()=>{
                nav.classList.toggle('show-menu')
                toggleBtn.classList.toggle('bx-x')
            })
        }
    }
    showMenu('header-toggle','navbar')

    const linkColor = document.querySelectorAll('.nav__link')

    function colorLink(){
        linkColor.forEach(l => l.classList.remove('active'))
        this.classList.add('active')
    }
    linkColor.forEach(l => l.addEventListener('click', colorLink))
</script>
<script>
    const showModal = (openButton, modalContent) =>{
        const openBtn = document.getElementById(openButton),
            modalContainer = document.getElementById(modalContent)

        if(openBtn && modalContainer){
            openBtn.addEventListener('click', ()=>{
                modalContainer.classList.add('show-modal')
            })
        }
    }
    showModal('open-modal','modal-container')

    const closeBtn = document.querySelectorAll('.close-modal')

    function closeModal(){
        const modalContainer = document.getElementById('modal-container')
        modalContainer.classList.remove('show-modal')
    }
    closeBtn.forEach(c => c.addEventListener('click', closeModal))
</script>
<script>
    function submitForm(form) {
        let phone_number = document.getElementById('phone_number').value;
        form.action = '/customer_profile/' + encodeURIComponent(phone_number);
        return true;
    }
</script>
</html>